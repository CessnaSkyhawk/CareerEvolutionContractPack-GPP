// *************************** Orbit Niven

CONTRACT_TYPE
{
    name = OrbitNiven
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 100
	
    notes = Launch a craft to orbit @targetBody
    synopsis = Launch a craft to orbit @targetBody
	
    description = It is time for us to send a probe to orbit our closest planetary neighbor.
		
    completedMessage = Success! Your probe achieved orbit around @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Niven
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyNiven
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitNiven
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitEve
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}

// *************************** Orbit Tellumo

CONTRACT_TYPE
{
    name = OrbitTellumo
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 101
	
    notes = Launch a craft to Orbit @targetBody
    synopsis = Launch a craft to Orbit @targetBody
	
    description = It is time for us to send a probe to orbit @targetBody.
		
    completedMessage = Success! Your probe orbited around @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Tellumo
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyTellumo
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitPlanet
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}

// *************************** Orbit Tellumo's Moons

CONTRACT_TYPE
{
    name = OrbitTellumoMoons
    group = UncrewedOrbits
	
    title = Orbit the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 102
	
    notes = Launch a craft to Orbit the moons of @targetBody
    synopsis = Launch a craft to Orbit the moons of @targetBody
	
    description = It is time for us to send a probe to orbit the moons of @targetBody.
		
    completedMessage = Success! Your probe orbited the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Tellumo
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = HomeWorld().Parent().Children().ElementAt(4).Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyTellumoMoons
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitMoons
		type = VesselParameterGroup
		title = Orbit the Moon of @targetBody
		define = OrbitMoons

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Orbit Thalia

CONTRACT_TYPE
{
    name = OrbitThalia
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 103
	
    notes = Launch a craft to Orbit @targetBody
    synopsis = Launch a craft to Orbit @targetBody
	
    description = It is time for us to send a probe to orbit @targetBody.
		
    completedMessage = Success! Your probe orbited around @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Thalia
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyThalia
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitPlanet
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}

// *************************** Orbit Thalia's Moon

CONTRACT_TYPE
{
    name = OrbitThaliaMoon
    group = UncrewedOrbits
	
    title = Orbit the Moon of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 104
	
    notes = Launch a craft to Orbit the moon of @targetBody
    synopsis = Launch a craft to Orbit the moon of @targetBody
	
    description = It is time for us to send a probe to orbit the moon of @targetBody.
		
    completedMessage = Success! Your probe orbited the moon of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Thalia
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = HomeWorld().Parent().Children().ElementAt(1).Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyThaliaMoon
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitMoons
		type = VesselParameterGroup
		title = Orbit the Moon of @targetBody
		define = OrbitMoons

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Orbit Icarus

CONTRACT_TYPE
{
    name = OrbitIcarus
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 105
	
    notes = Launch a craft to Orbit @targetBody
    synopsis = Launch a craft to Orbit @targetBody
	
    description = It is time for us to send a probe to orbit @targetBody.
		
    completedMessage = Success! Your probe orbited around @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Icarus
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyIcarus
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitPlanet
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}

// *************************** Orbit Gratian

CONTRACT_TYPE
{
    name = OrbitGratian
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 106
	
    notes = Launch a craft to Orbit @targetBody
    synopsis = Launch a craft to Orbit @targetBody
	
    description = It is time for us to send a probe to orbit @targetBody.
		
    completedMessage = Success! Your probe orbited around @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Gratian
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = MoonLanding
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyGratian
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitPlanet
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}

// *************************** Orbit Gratian's Moon

CONTRACT_TYPE
{
    name = OrbitGratianMoon
    group = UncrewedOrbits
	
    title = Orbit the Moon of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 107
	
    notes = Launch a craft to Orbit the moon of @targetBody
    synopsis = Launch a craft to Orbit the moon of @targetBody
	
    description = It is time for us to send a probe to orbit the moon of @targetBody.
		
    completedMessage = Success! Your probe orbited the moon of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Gratian
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = HomeWorld().Parent().Children().ElementAt(4).Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyGratianMoon
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitMoons
		type = VesselParameterGroup
		title = Orbit the Moon of @targetBody
		define = OrbitMoons

		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Orbit Jool / Jupiter

CONTRACT_TYPE
{
    name = OrbitOtho
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 108
	
    notes = Launch a craft to Orbit @targetBody
    synopsis = Launch a craft to Orbit @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Otho
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyOtho
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitTellumo
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitPlanet
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}

// *************************** Orbit Otho's Moons

CONTRACT_TYPE
{
    name = OrbitOthoMoons
    group = UncrewedOrbits
	
    title = Orbit the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 109
	
    notes = Launch a craft to Orbit the moons of @targetBody
    synopsis = Launch a craft to Orbit the moons of @targetBody
	
    description = It is time for us to send a probe to orbit the moons of @targetBody.
		
    completedMessage = Success! Your probe orbited the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Otho
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitOtho
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyOthoMoons
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitMoons
		type = VesselParameterGroup
		title = Orbit the Moon of @targetBody
		define = OrbitMoons
		
		PARAMETER
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Orbit Gauss

CONTRACT_TYPE
{
    name = OrbitGauss
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 110
	
    notes = Launch a craft to Orbit @targetBody
    synopsis = Launch a craft to Orbit @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Gauss
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		saturn = @/targetBodies.ElementAt(0)
		title = First Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitOtho
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyGauss
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitPlanet
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}

// *************************** Orbit Nero

CONTRACT_TYPE
{
    name = OrbitNero
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 112
	
    notes = Launch a craft to Orbit @targetBody
    synopsis = Launch a craft to Orbit @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Nero
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		uranus = @/targetBodies.ElementAt(1)
		title = Second Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 1
		title = There must be a 2nd planet past @/jupiter
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitGauss
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyNero
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitPlanet
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}

// *************************** Orbit Hox

CONTRACT_TYPE
{
    name = OrbitHox
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 114
	
    notes = Launch a craft to Orbit @targetBody
    synopsis = Launch a craft to Orbit @targetBody
	
    description = It is time for us to send a probe to @targetBody for science!
		
    completedMessage = Success! Your probe flew near @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Hox
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		neptune = @/targetBodies.ElementAt(2)
		title = Second Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 2
		title = There must be a 3rd planet past @/jupiter
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitNero
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyHox
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitPlanet
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}

// *************************** Orbit Gauss's Moons

CONTRACT_TYPE
{
    name = OrbitGaussMoons
    group = UncrewedOrbits
	
    title = Orbit the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 111
	
    notes = Launch a craft to Orbit the moons of @targetBody
    synopsis = Launch a craft to Orbit the moons of @targetBody
	
    description = It is time for us to send a probe to orbit the moons of @targetBody.
		
    completedMessage = Success! Your probe orbited the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Gauss
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		saturn = @/targetBodies.ElementAt(0)
		title = First Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitGauss
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyGaussMoons
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitMoons
		type = VesselParameterGroup
		title = Orbit the Moons of @targetBody
		define = OrbitMoons
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Orbit Nero's Moons

CONTRACT_TYPE
{
    name = OrbitNeroMoons
    group = UncrewedOrbits
	
    title = Orbit the Moons of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 113
	
    notes = Launch a craft to Orbit the moons of @targetBody
    synopsis = Launch a craft to Orbit the moons of @targetBody
	
    description = It is time for us to send a probe to orbit the moons of @targetBody.
		
    completedMessage = Success! Your probe orbited the moons of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Nero
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		uranus = @/targetBodies.ElementAt(1)
		title = 2nd Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitNero
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyNeroMoons
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitMoons
		type = VesselParameterGroup
		title = Orbit the Moons of @targetBody
		define = OrbitMoons
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Orbit Hox's Moon

CONTRACT_TYPE
{
    name = OrbitHoxMoon
    group = UncrewedOrbits
	
    title = Orbit the Moon of @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 115
	
    notes = Launch a craft to Orbit the moon of @targetBody
    synopsis = Launch a craft to Orbit the moon of @targetBody
	
    description = It is time for us to send a probe to orbit the moon of @targetBody.
		
    completedMessage = Success! Your probe orbited the moon of @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Hox
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		neptune = @/targetBodies.ElementAt(2)
		title = 3rd Planet Past Gas Giant
	}
	
	DATA
	{
		type = List<CelestialBody>
		Moons = @/targetBody.Children()
		title = Find Moons
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/Moons.Count() > 0
		title = There must be a Moon
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitNero
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyHoxMoon
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitMoons
		type = VesselParameterGroup
		title = Orbit the Moons of @targetBody
		define = OrbitMoons
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
            targetBody = @targetMoon
			rewardScience = 1
			rewardReputation = 5
			rewardFunds = @CareerEvolution:Kerbucks
            ITERATOR
            {
                type = CelestialBody
                targetMoon = @/targetBody.Children()
            }
        }
	}
}

// *************************** Orbit Leto

CONTRACT_TYPE
{
    name = OrbitLeto
    group = UncrewedOrbits
	
    title = Orbit @targetBody
	agent = Experimental Engineering Group
	
	sortKey = 116
	
    notes = Launch a craft to Orbit @targetBody
    synopsis = Launch a craft to Orbit @targetBody
	
    description = It is time for us to send a probe to orbit @targetBody for science!
		
    completedMessage = Success! Your probe orbited @targetBody and you have returned important scientific data for our bored scientists to research.

    minExpiry = 0
    maxExpiry = 0
    maxCompletions = 1
	
    cancellable = true
    declinable = true
	
    targetBody = Leto
	
	
    // REWARDS
    rewardScience = 2
    rewardReputation = 5
    rewardFunds = @CareerEvolution:Kerbucks4
	
    advanceFunds = @CareerEvolution:Kerbucks4
	
	prestige = Significant

	DATA
	{
		type = CelestialBody
		jupiter = AllBodies().Where(cb => cb.IsPlanet() && !cb.HasSurface()).First()
		title = Find Gas Giant
	}
	
	DATA
    {
        type = double
		
        sma = @/jupiter.SemiMajorAxis()
        targetSMA = @sma * 1.1
		title = Find Gas Giant SMA
    }
	
	DATA
    {
        type = List<CelestialBody>
        targetBodies = AllBodies().Where(cb => cb.SemiMajorAxis() >= @targetSMA && cb.IsPlanet() && cb != HomeWorld())
		title = Find Planets Past Gas Giant
    }
	DATA
	{
		type = CelestialBody
		pluto = @/targetBodies.ElementAt(3)
		title = Second Planet Past Gas Giant
	}
	
	REQUIREMENT
	{
		type = Expression
		expression = @/targetBodies.Count() > 3
		title = There must be a 4th planet past @/jupiter
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = OrbitNero
		title = Complete @contractType Contract
	}
	
	REQUIREMENT
	{
		name = CompleteContract
		type = CompleteContract
		contractType = FlybyLeto
		title = Complete @contractType Contract
	}
	
	PARAMETER
	{
		name = OrbitPlanet
		type = VesselParameterGroup
		title = Orbit @targetBody
		define = OrbitPlanet
		
		PARAMETER 
		{
			name = Crewmembers
			type = HasCrew
			minCrew = 0
			maxCrew = 0
			title = Uncrewed
			hideChildren = true
		}
		PARAMETER
		{
			name = OrbitPlanet
			type = Orbit
			situation = ORBITING
			minInclination = 0
			title = Orbit @targetBody
		}
	}
}